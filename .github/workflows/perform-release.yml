name: Perform Release

on:
  workflow_dispatch:
    inputs:
      release_kind:
        type: choice
        description: The type of release.
        default: prerelease
        required: true
        options:
          - prerelease
          - stable
      publish:
        description: "True to publish release to git, vpm. if false, this creates release asset only"
        type: boolean
        required: false
      version:
        description: "Version to release"
        type: string
        required: true
        
env:
  PKG_NAME: nadena.dev.ndmf

concurrency:
  group: publish
  cancel-in-progress: true

permissions: write-all

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Validate prereleae version
        id: check-version
        if: ${{ github.event.inputs.release_kind == 'prerelease' && !contains(github.event.inputs.version, '-') }}
        run:
          echo "Prerelease version must contain a hyphen"
          exit 1
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Check semver syntax
        if: steps.check-tag.outputs.need-new-tag == 'true'
        id: semver-check
        run: |
          chmod +x .github/workflows/*.sh
          .github/workflows/check-semver-syntax.sh ${{ github.event.inputs.version }}      
      
      - name: Set git user and email
        id: git-config
        run: |
          git config --global user.name "nadena.dev release bot"
          git config --global user.email "ci@nadena.dev"
      - name: Update version
        id: update-version
        run: |
          jq '.version = env.VERSION' package.json > package.json.tmp
          mv package.json.tmp package.json
        env:
          VERSION: ${{ github.event.inputs.version }}
          
      - name: Update changelog
        id: changelog
        uses: anatawa12/sh-actions/changelog/prepare-release@e598bb95ee708f482b4dd422c4e0bb3a053113e5
        tag-prefix: ""
        prerelease-note-heading: |
          Version ${{ env.VERSION }}
          ---
          
          **This is a prerelease version.** There may be bugs, and API compatibility is not yet guaranteed.
          
        release-note-heading: |
          Version ${{ env.VERSION }}
          ---
          
      - name: Upload CHANGELOG.md
        if: ${{ !fromJSON(env.PRERELEASE) }}
        uses: actions/upload-artifact@v4
        with:
          name: CHANGELOG
          path: CHANGELOG.md
      - name: Upload CHANGELOG-PRERELEASE.md
        uses: actions/upload-artifact@v4
        with:
          name: CHANGELOG-PRERELEASE
          path: CHANGELOG-PRERELEASE.md
      - run: cp "${{ steps.changelog.outputs.release-note }}" release-note.md
      - name: Upload release note
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: release-note.md
      - run: mv release-note.md .github

      - name: Commit and tag version update
        run: |
          git commit -m "Release ${{ github.event.inputs.version }}"
          git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
      - name: Publish tag
        if: ${{ github.event.inputs.publish == 'true' }}
        run: |
          git push origin ${{ github.event.inputs.version }}

      - name: Create Zip
        run: |
          zip ".github/${{env.zipFile}}" ./* -r -x .github .git '.git/*' '*~/*' '*.ps1*'

      - name: Move zipfile
        run: |
          mv .github/${{env.zipFile}} ${{env.zipFile}}

      - uses: actions/upload-artifact@v4
        with:
          name: package-zip
          path: ${{ env.zipFile }}

      - name: Make Release
        uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
        if: ${{ github.event.inputs.publish == 'true' }}
        with:
          draft: true
          body_path: .github/release-note.md
          tag_name: ${{ needs.prechecks.outputs.version }}
          name: ${{ needs.prechecks.outputs.version }}
          make_latest: ${{ github.event.inputs.release_kind == 'stable' }}
          files: |
            ${{ env.zipFile }}
            package.json