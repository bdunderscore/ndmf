#  MIT License
#
#  Copyright (c) 2022 anatawa12
#  Copyright (c) 2022 bd_
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.


name: GameCI

on:
  push:
    branches: [dev, ci]
  # This is a bit of a radioactive event; we need to be very careful with what permissions
  # we assign this action, as we're allowing arbitrary code execution with the context of
  # whatever permissions we assign.
  pull_request_target: 
    paths-ignore:
      - 'docfx~/**'
      - 'design-docs/**'
      - '*.md'
      - .gitignore
  workflow_dispatch: {}
  workflow_call:
    secrets:
      UNITY_LICENSE:
        required: true

# pull_request_target grants access to a privileged GITHUB_TOKEN by default, revoke this
permissions: {}

jobs:
  build-and-test:
    name: Unit tests
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        #unity_version: [ auto, 2022.3.5f1 ]
        unity_version: [ 2022.3.6f1 ]
        sdk: [ vrcsdk ]
        experimental: [ false ]
        include:
          - unity_version: 2022.3.6f1
            sdk: standalone
            experimental: true
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - run: |
          sudo apt-get -y install libxml2-utils # xmllint

      - id: prepare-project
        name: Prepare project
        run: |
          mkdir .github/ProjectRoot/Packages/nadena.dev.ndmf -p
          mv [^P]* .github/ProjectRoot/Packages/nadena.dev.ndmf
          mv .github/ProjectRoot/* .
          mv 'Packages/nadena.dev.ndmf/UnitTests~' 'Packages/nadena.dev.ndmf/UnitTests'
          for i in packages-lock manifest vpm-manifest; do
            if [ -e "$i-${{ matrix.unity_version }}.json" ]; then
              mv "$i-${{ matrix.unity_version }}.json" Packages/$i.json -v
            fi
          done
      
      - id: symlink-deps
        if: ${{ matrix.sdk != 'vrcsdk' }}
        name: Symlink dependencies
        run: |
          cd Packages/nadena.dev.ndmf
          ln -s 'Dependencies~' Dependencies

      - uses: anatawa12/sh-actions/setup-vrc-get@master
        if: ${{ matrix.sdk == 'vrcsdk' }}

      - name: Resolve packages
        if: ${{ matrix.sdk == 'vrcsdk' }}
        run: |
          vrc-get repo add -- "https://vrchat.github.io/packages/index.json?download" || true
          vrc-get resolve --project .
          vrc-get info project --project .

      - name: "Debug: List project contents"
        run: |
          ls -lR
          ls -lR Packages/nadena*

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.unity_version }}-${{ matrix.sdk }}
          restore-keys: Library-

      - uses: game-ci/unity-test-runner@v3
        id: gameci
        env:
          # meh, just a personal license...
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          testMode: EditMode
          unityVersion: ${{ matrix.unity_version }}
          githubToken: ${{ github.token }}
          coverageOptions: generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+nadena.dev.*
          customParameters: -nographics -assemblyNames nadena.dev.ndmf.UnitTests
          checkName: ${{ steps.setup.outputs.check_name }}

      - name: "Debug: List project contents"
        if: '!cancelled()'
        run: |
          ls -lR
          ls -lR Packages/nadena*
          
      - name: List compile errors
        continue-on-error: true
        if: failure()
        run: |
          perl -ne '$out = 0 if /^#####|^-----EndCompilerOutput/; $out = 1 if /^##### Output|^-----CompilerOutput/; print if $out;' ${{ steps.gameci.outputs.artifactsPath }}/editmode.log
          
      - name: List test failures
        continue-on-error: true
        if: failure()
        run: |
          if [ -e ${{ steps.gameci.outputs.artifactsPath }}/editmode-results.xml ]; then
            xmllint  --pretty 2 --nocompact  --xpath '//test-case[@result!="Passed"]'  ${{ steps.gameci.outputs.artifactsPath }}/editmode-results.xml
          fi

      - uses: actions/upload-artifact@v4
        if: '!cancelled()'
        continue-on-error: true
        with:
          name: Coverage results ${{ matrix.unity_version }} ${{ matrix.sdk }}
          path: ${{ steps.gameci.outputs.coveragePath }}

      - uses: actions/upload-artifact@v4
        if: '!cancelled()'
        continue-on-error: true
        with:
          name: Test results for ${{ matrix.unity_version }} ${{ matrix.sdk }}
          path: ${{ steps.gameci.outputs.artifactsPath }}
